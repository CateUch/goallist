{"version":3,"sources":["components/Button/Button.jsx","components/GoalInput/GoalInput.jsx","components/GoalItem/GoalItem.jsx","components/GoalList/GoalList.jsx","App.js","reportWebVitals.js","index.js"],"names":["Button","props","type","className","onClick","children","GoalInput","useState","inputValue","setInputValue","onSubmit","event","preventDefault","newGoalHandler","onChange","target","value","GoalItem","id","GoalList","goals","map","el","onDeleteItem","goal","v1","App","setGoals","content","style","textAlign","length","prevGoals","filter","newGoal","newArrGoal","prevState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oTAYeA,EARA,SAAAC,GACb,OACE,wBAAQC,KAAMD,EAAMC,KAAMC,UAAU,SAASC,QAASH,EAAMG,QAA5D,SACGH,EAAMI,YCsBEC,EAxBG,SAACL,GAAW,IAAD,EAEUM,mBAAU,IAFpB,mBAEnBC,EAFmB,KAEPC,EAFO,KAc7B,OACI,uBAAMC,SAPN,SAA4BC,GACxBA,EAAMC,iBACNX,EAAMY,eAAeL,GACrBC,EAAc,KAIlB,UACA,qBAAKN,UAAU,aAAf,SACI,uBAAOD,KAAK,OAAOY,SAbvB,SAA2BH,GACnBF,EAAcE,EAAMI,OAAOC,QAYgBA,MAAOR,MAEtD,cAAC,EAAD,CAAQN,KAAK,SAAb,0BCXOe,G,MATE,SAAAhB,GAEb,OACI,oBAAIE,UAAU,YAAYC,QAAS,kBAAMH,EAAMG,QAAQH,EAAMiB,KAA7D,SACKjB,EAAMI,aCYJc,EAfE,SAAClB,GAEd,OACI,oBAAIE,UAAU,YAAd,SACKF,EAAMmB,MAAMC,KAAI,SAAAC,GAAE,OACf,cAAC,EAAD,CAEIJ,GAAII,EAAGJ,GACPd,QAASH,EAAMsB,aAHnB,SAIED,EAAGE,MAHIC,sBCuCVC,MA5Cf,WAAgB,IAAD,EAEanB,mBAAS,CACjC,CAAEW,GAAIO,eAAMD,KAAM,qBAClB,CAAEN,GAAIO,eAAMD,KAAM,oBAJP,mBAENJ,EAFM,KAECO,EAFD,KAqBTC,EACF,mBAAGC,MAAO,CAAEC,UAAW,UAAvB,4CAUF,OAPIV,EAAMW,OAAS,IACjBH,EACE,cAAC,EAAD,CAAUR,MAAOA,EAAOG,aAb5B,SAAuBL,GACrBS,GAAS,SAACK,GAER,OADsBZ,EAAMa,QAAO,SAAAX,GAAE,OAAKA,EAAGJ,KAAOA,YAiBtD,gCACE,yBAASA,GAAG,YAAZ,SACE,cAAC,EAAD,CAAWL,eA5BjB,SAAqBqB,GAEnB,IAAIC,EAAa,CAAEjB,GAAIO,eAAMD,KAAMU,GACnCP,GAAS,SAACS,GAAD,4BAAmBA,GAAnB,CAA8BD,YA2BrC,yBAASjB,GAAG,QAAZ,SACGU,QChCMS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7edb3916.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './Button.css';\r\n\r\nconst Button = props => {\r\n  return (\r\n    <button type={props.type} className=\"button\" onClick={props.onClick}>\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;","import React from 'react';\r\nimport {useState} from 'react';\r\nimport './GoalInput.css';\r\nimport Button from '../Button/Button'\r\n\r\nconst GoalInput = (props) => {\r\n\r\n    const[inputValue, setInputValue] = useState ('')\r\n\r\n    function changeInputValue (event) {\r\n            setInputValue(event.target.value);\r\n    }\r\n\r\n    function formSubmitHandler (event) {\r\n        event.preventDefault();\r\n        props.newGoalHandler(inputValue);\r\n        setInputValue('');\r\n    }\r\n\r\nreturn (\r\n    <form onSubmit={formSubmitHandler}>\r\n    <div className='goal_input'>\r\n        <input type=\"text\" onChange={changeInputValue} value={inputValue}/>\r\n        </div>\r\n        <Button type='submit'>Add Goal</Button>\r\n    </form>\r\n)\r\n}\r\n\r\nexport default GoalInput;","import React from 'react';\r\n\r\nimport './GoalItem.css';\r\n\r\nconst GoalItem = props => {\r\n\r\n    return (\r\n        <li className=\"goal_item\" onClick={() => props.onClick(props.id)}>\r\n            {props.children}\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default GoalItem;\r\n","import React from 'react';\r\nimport { v1 } from 'uuid';\r\nimport GoalItem from '../GoalItem/GoalItem'\r\n\r\n\r\nconst GoalList = (props) => {\r\n\r\n    return (\r\n        <ul className='goal_list'>\r\n            {props.goals.map(el => (\r\n                <GoalItem\r\n                    key={v1()}\r\n                    id={el.id}\r\n                    onClick={props.onDeleteItem}\r\n                >{el.goal}</GoalItem>\r\n            ))}\r\n            </ul>\r\n    )\r\n}\r\n\r\nexport default GoalList;","import { useState } from 'react';\nimport './App.css';\nimport { v1 } from 'uuid';\nimport GoalInput from './components/GoalInput/GoalInput';\nimport GoalList from './components/GoalList/GoalList';\n\nfunction App() {\n\n  const [goals, setGoals] = useState([\n    { id: v1(), goal: \"finish the course\" },\n    { id: v1(), goal: \"create profile\" }\n  ])\n\n  function saveNewGoal(newGoal) {\n\n    let newArrGoal = { id: v1(), goal: newGoal }\n    setGoals((prevState) => [...prevState, newArrGoal]\n    );\n  }\n\n  function deleteHandler(id) {\n    setGoals((prevGoals) => {\n      const filteredGoals = goals.filter(el => (el.id !== id));\n      return filteredGoals;\n    });\n  }\n\n  let content = (\n    <p style={{ textAlign: 'center' }}>No goals found. Maybe add one?</p>\n  );\n\n  if (goals.length > 0) {\n    content = (\n      <GoalList goals={goals} onDeleteItem={deleteHandler} />\n    );\n  }\n\n\n  return (\n    <div>\n      <section id='goal_form'>\n        <GoalInput newGoalHandler={saveNewGoal} />\n      </section>\n      <section id='goals'>\n        {content}\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}